Day 7 - Live AWS Project Using Shell Scripting for DevOps
===========================================================



There are 2 Main Reasons because of which Orgainsations Move to Cloud


1) Managability

2) Cost Optimization



We are doing a Live Project on Tracking the Resource Usage using the Shell Script.


Task - Everyday at 6 PM we have to Share the Resource Tracking Report to Our Manager, So we will create a file and this file will have all of this resource usage. How Many EC2 Instances are Active, How Many S3 Buckets are there, How Many Lambda Functions are there, How Many IAM Users are there. But Manually we cannot do this Everyday, So we will use Cron Job.  A Cron Job is a scheduled task in Unix-like operating systems that runs automatically at specified intervals. It allows users to automate repetitive tasks, such as running scripts, backing up files, or sending emails, without manual intervention.







Creating a shell script to track AWS resource usage can be quite useful for monitoring costs and optimizing resource allocation. Below is a simple example of a shell script that uses the AWS CLI to gather information about some common resources, such as EC2 instances, S3 buckets, and RDS databases.


### Prerequisites:
1. **AWS CLI**: Make sure you have the AWS CLI installed and configured with the necessary permissions.
2. **jq**: A lightweight and flexible command-line JSON processor for parsing the output.



-------------------------------


vim track-aws-resources.sh



#!/bin/bash


############################
#
# Author: Amir Shaikh
# Date: 24/09/2024
#
# Script to track AWS resource usage
# Version: v1
############################


# Define AWS region
REGION="us-east-1"

# Function to track EC2 instances
track_ec2_instances() {
    echo "EC2 Instances:"
    aws ec2 describe-instances --region $REGION --query 'Reservations[*].Instances[*].[InstanceId,InstanceType,State.Name,LaunchTime]' --output table
    echo ""
}

# Function to track S3 buckets
track_s3_buckets() {
    echo "S3 Buckets:"
    aws s3api list-buckets --query 'Buckets[*].[Name,CreationDate]' --output table
    echo ""
}

# Function to track RDS instances
track_rds_instances() {
    echo "RDS Instances:"
    aws rds describe-db-instances --region $REGION --query 'DBInstances[*].[DBInstanceIdentifier,DBInstanceClass,DBInstanceStatus,InstanceCreateTime]' --output table
    echo ""
}

# Main function to call all tracking functions
main() {
    echo "AWS Resource Usage Tracking"
    echo "============================"
    track_ec2_instances
    track_s3_buckets
    track_rds_instances
    echo "Tracking completed."
}

# Execute the main function
main






----------------------------------------------------------------------------







### How to Use the Script - 
==============================
1. **Save the Script**: Save the script to a file, e.g., `track_aws_resources.sh`.

2. **Make it Executable**: Run `chmod u+x track_aws_resources.sh` to make it executable.

3. **Run the Script**: Execute it by running `./track_aws_resources.sh`.






Below is the Output of the Shell Script -
==========================================


Output = ./track-aws-resources.sh

AWS Resource Usage Tracking
============================
EC2 Instances:
----------------------------------------------------------------------------
|                             DescribeInstances                            |
+----------------------+-----------+----------+----------------------------+
|  i-0bdc6a4a2ae744835 |  t2.micro |  running |  2024-09-24T14:33:55.000Z  |
|  i-00a60d69958aa3902 |  t2.micro |  stopped |  2024-09-07T16:52:02.000Z  |
+----------------------+-----------+----------+----------------------------+

S3 Buckets:
---------------------------------------------------------------------------------
|                                  ListBuckets                                  |
+--------------------------------------------------+----------------------------+
|  amir-docs                                       |  2023-11-25T16:00:32.000Z  |
|  aws-athena-query-results-us-east-1-130243900672 |  2023-10-18T10:37:06.000Z  |
|  aws-glue-assets-130243900672-ap-south-1         |  2023-10-14T06:31:50.000Z  |
|  aws-prod-practice-bucket                        |  2024-08-16T17:22:01.000Z  |
|  customer-data-7oct                              |  2023-10-07T08:56:37.000Z  |
|  demo-12112023-practice                          |  2023-11-12T07:31:26.000Z  |
|  demo-18102023                                   |  2023-10-18T09:16:40.000Z  |
|  demo-bucket-23102023                            |  2023-10-23T10:41:10.000Z  |
|  snowflake-practice-bucket-02112023              |  2023-11-02T13:27:30.000Z  |
|  transform-data-14-oct                           |  2023-10-14T06:25:24.000Z  |
+--------------------------------------------------+----------------------------+

RDS Instances:

Tracking completed.








### What the Script Does -
=============================

- **Tracks EC2 Instances**: Lists the IDs, types, states, and launch times of all EC2 instances in the specified region.

- **Tracks S3 Buckets**: Lists the names and creation dates of all S3 buckets.

- **Tracks RDS Instances**: Lists the identifiers, classes, statuses, and creation times of all RDS instances.







----------------------------------------------------------------------------



OR 

### Prerequisites:
1. **AWS CLI**: Make sure you have the AWS CLI installed and configured with the necessary permissions.
2. **jq**: A lightweight and flexible command-line JSON processor for parsing the output.



vim aws_resource_tracker.sh

 
#!/bin/bash


####################################
#
# Author: Amir Shaikh
# 
# Date: 12/02/2025
#
# Version: v1
#
# This script will Report the AWS Resource Usage
#
####################################

set -x

# AWS S3
# AWS EC2
# AWS LAMBDA
# AWS IAM

# List s3 Buckets
echo "Print list of s3 buckets"
aws s3 ls

# List EC2 Instances
echo "Print list of ec2 instances"
aws ec2 describe-instances | jq '.Reservations[].Instances[].InstanceId'

# List Lambda Functions
echo "Print list of Lambda Functions"
aws lambda list-functions

# List IAM Users
echo "Print list of IAM Users"
aws iam list-users








Output =  ./aws_resource_tracker.sh



+ echo 'Print list of s3 buckets'
Print list of s3 buckets
+ aws s3 ls
2023-11-25 16:00:32 amir-docs
2023-10-18 10:37:06 aws-athena-query-results-us-east-1-130243900672
2023-10-14 06:31:50 aws-glue-assets-130243900672-ap-south-1
2024-08-16 17:22:01 aws-prod-practice-bucket
2023-10-07 08:56:37 customer-data-7oct
2023-11-12 07:31:26 demo-12112023-practice
2023-10-18 09:16:40 demo-18102023
2023-10-23 10:41:10 demo-bucket-23102023
2025-02-06 11:20:59 jackson3421
2023-11-02 13:27:30 snowflake-practice-bucket-02112023
2023-10-14 06:25:24 transform-data-14-oct


+ echo 'Print list of ec2 instances'
Print list of ec2 instances
+ aws ec2 describe-instances
+ jq '.Reservations[].Instances[].InstanceId'
"i-01ab5e82ac0760a8d"
"i-05376e83bdc28a03e"
"i-067d49aca1dcd1203"


+ echo 'Print list of Lambda Functions'
Print list of Lambda Functions
+ aws lambda list-functions
{
    "Functions": []
}


+ echo 'Print list of IAM Users'
Print list of IAM Users
+ aws iam list-users
{
    "Users": [
        {
            "Path": "/",
            "UserName": "Admin_Amir",
            "UserId": "AIDAR4UZEGUADMIW5I3UZ",
            "Arn": "arn:aws:iam::130243900672:user/Admin_Amir",
            "CreateDate": "2023-10-06T10:12:20Z",
            "PasswordLastUsed": "2023-12-02T10:29:23Z"
        },
        {
            "Path": "/",
            "UserName": "Amir-Admin",
            "UserId": "AIDAR4UZEGUAFAKU3MT2Q",
            "Arn": "arn:aws:iam::130243900672:user/Amir-Admin",
            "CreateDate": "2023-12-02T10:33:53Z",
            "PasswordLastUsed": "2024-06-05T10:32:35Z"
        },
        {
            "Path": "/",
            "UserName": "Amir-DevOps",
            "UserId": "AIDAR4UZEGUACTTXCVGCJ",
            "Arn": "arn:aws:iam::130243900672:user/Amir-DevOps",
            "CreateDate": "2024-08-16T17:29:40Z",
            "PasswordLastUsed": "2024-09-07T16:49:43Z"
        },
        {
            "Path": "/",
            "UserName": "Amir_DevOps",
            "UserId": "AIDAR4UZEGUAMLTIEW5XG",
            "Arn": "arn:aws:iam::130243900672:user/Amir_DevOps",
            "CreateDate": "2024-08-22T12:19:30Z",
            "PasswordLastUsed": "2025-02-08T14:59:55Z"
        },
        {
            "Path": "/",
            "UserName": "test-user",
            "UserId": "AIDAR4UZEGUAIZDLNBADL",
            "Arn": "arn:aws:iam::130243900672:user/test-user",
            "CreateDate": "2024-08-07T11:30:39Z",
            "PasswordLastUsed": "2024-08-07T11:31:33Z"
        }
    ]
}

