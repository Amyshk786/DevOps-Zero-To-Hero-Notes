Day-20 | GitHub Actions | Actions vs Jenkins | 3 Projects with Examples | Configure Your Own Runner
====================================================================================================



GitHub Repository Used for this Lecture
Link - https://github.com/iam-veeramalla/GitHub-Actions-Zero-to-Hero





What is GitHub Actions - GitHub Actions is yet Another CICD Solution, So if you want to Compare it with Jenkins they do similar Tasks like they execute your Continuous Integration and Continuous Delivery But the Primary Difference is GitHub Actions is Focused only on GitHub just like Gitlab CI Gitlab CI is also a CICD Solution that Gitlab is Offering you but it is only focused on Gitlab Platform.



So One Big thing to Understand or whenever you want to Consider GitHub Actions or Gitlab CI the primary thing you have to understand is what your Organization's Goal is, Do you want to continue on GitHub do you want to continue on Gitlab or in the Future you might want to Migrate to Different Platforms in such cases GitHub Actions or Gitlab CI is not the Right Solution for you Because again they are platform oriented Solutions just like why we choose Terraform Over Cloud Formation Templates Because Terraform is a Tool that can work on Multi-Cloud or it can work on the Hybrid Cloud Environment. 



So similarly GitHub Actions is a Very Powerful Although it is better than Jenkins. But if your Platform or if your Application is going to Move from GitHub to Gitlab in the future or GitHub to AWS or Any Self-Hosted Git Repositories or Azure devops do not use GitHub Actions because you will waste a lot of time in future and you will put lot of Efforts Migrating your GitHub Actions files to Jenkins files or Something Else.



In GitHub Actions We don't have to Install Plugins, For Writing a GitHub Actions File You Just Need to go to the Root of your Repository and you need to Create a ".github/workflows" Folder. 








---------------------------------------------------
  



## Comparing with Jenkins 
=========================


### Advantages of GitHub Actions over Jenkins
================================================


- Hosting: Jenkins is self-hosted, meaning it requires its own server to run, while GitHub Actions is hosted by GitHub and runs directly in your GitHub repository.


- User interface: Jenkins has a complex and sophisticated user interface, while GitHub Actions has a more streamlined and user-friendly interface that is better suited for simple to moderate automation tasks.


- Cost: Jenkins can be expensive to run and maintain, especially for organizations with large and complex automation needs. GitHub Actions, on the other hand, is free for open-source projects and has a tiered pricing model for private repositories, making it more accessible to smaller organizations and individual developers.




---------------------------------------------------




### Advantages of Jenkins over GitHub Actions

- Integration: Jenkins can integrate with a wide range of tools and services, but GitHub Actions is tightly integrated with the GitHub platform, making it easier to automate tasks related to your GitHub workflow.

In conclusion, Jenkins is better suited for complex and large-scale automation tasks, while GitHub Actions is a more cost-effective and user-friendly solution for simple to moderate automation needs.


